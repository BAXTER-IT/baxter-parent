<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<groupId>com.baxter</groupId>
	<artifactId>parent</artifactId>
	<version>1.12-SNAPSHOT</version>
	<packaging>pom</packaging>
	<name>Baxter Parent POM</name>

	<inceptionYear>2012</inceptionYear>

	<organization>
		<name>Baxter Technologies Ltd</name>
		<url>http://baxter-it.com</url>
	</organization>

	<scm>
		<connection>scm:git:ssh://git@github.com:BAXTER-IT/baxter-parent.git</connection>
		<developerConnection>scm:git:ssh://git@github.com:BAXTER-IT/baxter-parent.git</developerConnection>
		<url>ssh://git@github.com:BAXTER-IT/baxter-parent.git</url>
		<tag>HEAD</tag>
	</scm>

	<url>http://baxter.jfrog.io/baxter/sites/parent</url>

	<licenses>

		<license>
			<name>Baxter Default</name>
			<url>http://baxter.com/licenses/DEFAULT-1.0.txt</url>
			<comments>Some comments to a license</comments>
			<distribution>manual</distribution>
		</license>

	</licenses>

	<build>

		<pluginManagement>

			<plugins>

				<plugin>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.1</version>
					<configuration>
						<!-- Use Java7 as default for everything. In some special cases when 
							Java6 compatibility is required the corresponding module should override 
							compiler settings. -->
						<source>${java.version}</source>
						<target>${java.version}</target>
						<encoding>UTF-8</encoding>
					</configuration>
				</plugin>

				<plugin>
					<artifactId>maven-scm-plugin</artifactId>
					<version>1.9</version>
					<configuration>
						<connectionType>developerConnection</connectionType>
					</configuration>
				</plugin>

				<plugin>
					<artifactId>maven-jar-plugin</artifactId>
					<version>2.4</version>
					<configuration>
						<archive>
							<manifest>
								<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
							</manifest>
						</archive>
					</configuration>
				</plugin>

				<plugin>
					<artifactId>maven-site-plugin</artifactId>
					<version>3.3</version>
					<configuration>
						<reportPlugins>
							<plugin>
								<artifactId>maven-changes-plugin</artifactId>
								<version>2.10</version>
								<reportSets>
									<reportSet>
										<reports>
											<report>changes-report</report>
										</reports>
									</reportSet>
								</reportSets>
							</plugin>
							<plugin>
								<artifactId>maven-project-info-reports-plugin</artifactId>
								<version>2.7</version>
								<reportSets>
									<reportSet>
										<reports>
											<report>index</report>
											<report>summary</report>
											<report>license</report>
											<report>project-team</report>
											<report>cim</report>
											<report>scm</report>
											<report>issue-tracking</report>
											<report>modules</report>
										</reports>
									</reportSet>
								</reportSets>
							</plugin>
							<plugin>
								<artifactId>maven-javadoc-plugin</artifactId>
								<reportSets>
									<reportSet>
										<id>prod-classes</id>
										<configuration>
											<show>package</show>
										</configuration>
										<reports>
											<report>javadoc</report>
										</reports>
									</reportSet>
								</reportSets>
							</plugin>
						</reportPlugins>
					</configuration>
				</plugin>

				<plugin>
					<artifactId>maven-resources-plugin</artifactId>
					<version>2.6</version>
					<configuration>
						<encoding>UTF-8</encoding>
					</configuration>
				</plugin>

				<plugin>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>2.8</version>
				</plugin>

				<plugin>
					<artifactId>maven-release-plugin</artifactId>
					<version>2.5</version>
					<configuration>
						<autoVersionSubmodules>true</autoVersionSubmodules>
					</configuration>
				</plugin>

				<plugin>
					<artifactId>maven-clean-plugin</artifactId>
					<version>2.5</version>
				</plugin>

				<plugin>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>2.9.1</version>
				</plugin>

				<plugin>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>2.4</version>
				</plugin>

				<plugin>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>2.8.1</version>
				</plugin>

				<plugin>
					<artifactId>maven-source-plugin</artifactId>
					<version>2.2.1</version>
				</plugin>

				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>rpm-maven-plugin</artifactId>
					<version>2.1-alpha-3</version>
					<extensions>true</extensions>
				</plugin>

				<plugin>
					<groupId>org.vafer</groupId>
					<artifactId>jdeb</artifactId>
					<version>1.2</version>
					<extensions>true</extensions>
				</plugin>

				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>wagon-maven-plugin</artifactId>
					<version>1.0-beta-4</version>
				</plugin>

				<plugin>
					<groupId>com.kryshchuk.maven.plugins</groupId>
					<artifactId>umlet-maven-plugin</artifactId>
					<version>1.1.6</version>
				</plugin>

				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>build-helper-maven-plugin</artifactId>
					<version>1.8</version>
				</plugin>

				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
				</plugin>

			</plugins>

		</pluginManagement>

		<plugins>

			<plugin>
				<artifactId>maven-site-plugin</artifactId>
				<executions>
					<execution>
						<id>attach-site-desc</id>
						<phase>package</phase>
						<goals>
							<goal>attach-descriptor</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>com.kryshchuk.maven.plugins</groupId>
				<artifactId>umlet-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>generate-uml-images</id>
						<phase>pre-site</phase>
						<goals>
							<goal>convert</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

		</plugins>

		<extensions>

			<extension>
				<groupId>org.apache.maven.wagon</groupId>
				<artifactId>wagon-ssh</artifactId>
				<version>2.5</version>
			</extension>

			<extension>
				<groupId>org.apache.maven.wagon</groupId>
				<artifactId>wagon-webdav-jackrabbit</artifactId>
				<version>2.4</version>
			</extension>

		</extensions>

	</build>

	<dependencyManagement>

		<dependencies>

			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>4.11</version>
			</dependency>

			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-all</artifactId>
				<version>1.9.5</version>
			</dependency>

		</dependencies>

	</dependencyManagement>

	<dependencies>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<profiles>

		<profile>
			<id>FixSource</id>
			<build>
				<pluginManagement>
					<plugins>
						<plugin>
							<groupId>com.kryshchuk.maven.plugins</groupId>
							<artifactId>fixsource-maven-plugin</artifactId>
							<version>1.1.5</version>
						</plugin>
					</plugins>
				</pluginManagement>
				<plugins>
					<plugin>
						<groupId>com.kryshchuk.maven.plugins</groupId>
						<artifactId>fixsource-maven-plugin</artifactId>
						<configuration>
							<header><![CDATA[
                            ${project.name}
                            Copyright (C) 2012-2014  BAXTER Technologies
                            
                            This software is a property of BAXTER Technologies 
                            and should remain that way. If you got this source 
                            code from elsewhere please immediately inform Franck.
                            ]]></header>
						</configuration>
						<executions>
							<execution>
								<id>fix-java-sources</id>
								<phase>process-sources</phase>
								<goals>
									<goal>fix-java</goal>
								</goals>
							</execution>
							<execution>
								<id>fix-test-java-sources</id>
								<phase>process-test-sources</phase>
								<goals>
									<goal>fix-test-java</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.eclipse.m2e</groupId>
						<artifactId>lifecycle-mapping</artifactId>
						<configuration>
							<lifecycleMappingMetadata>
								<pluginExecutions combine.children="append">
									<pluginExecution>
										<pluginExecutionFilter>
											<groupId>com.kryshchuk.maven.plugins</groupId>
											<artifactId>fixsource-maven-plugin</artifactId>
											<versionRange>[1.0,)</versionRange>
											<goals>
												<goal>fix-java</goal>
												<goal>fix-test-java</goal>
												<goal>fix-xml</goal>
											</goals>
										</pluginExecutionFilter>
										<action>
											<ignore />
										</action>
									</pluginExecution>
								</pluginExecutions>
							</lifecycleMappingMetadata>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>APT</id>
			<build>
				<pluginManagement>
					<plugins>
						<plugin>
							<groupId>org.codehaus.mojo</groupId>
							<artifactId>wagon-maven-plugin</artifactId>
							<executions>
								<execution>
									<id>copy-deb-to-apt</id>
									<phase>deploy</phase>
									<goals>
										<goal>upload</goal>
									</goals>
									<configuration>
										<serverId>apt.baxter</serverId>
										<url>${apt.target.directory}</url>
										<fromDir>${project.build.directory}</fromDir>
										<includes>${project.build.finalName}.deb</includes>
									</configuration>
								</execution>
							</executions>
						</plugin>
					</plugins>
				</pluginManagement>
			</build>
			<properties>
				<!-- following can be overriden in settings.xml or in command line -->
				<!-- <apt.user>aptdeployer</apt.user> -->
				<!-- <apt.server>aptserver</apt.server> -->
				<apt.incomings>/opt/aptrepo/incomings</apt.incomings>
				<!-- Should not be changed typically -->
				<apt.target.directory>scp://${apt.user}@${apt.server}:${apt.incomings}</apt.target.directory>
			</properties>
		</profile>

		 <profile>
            <id>DEB</id>
            <activation>
                <os>
                    <family>unix</family>
                </os>
            </activation>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <artifactId>maven-clean-plugin</artifactId>
                            <configuration>
                                <filesets>
                                    <fileset>
                                        <directory>${unix-maven-plugin.scripts.dir}</directory>
                                        <includes>
                                            <include>*</include>
                                        </includes>
                                        <followSymlinks>false</followSymlinks>
                                    </fileset>
                                </filesets>
                            </configuration>
                        </plugin>
                        <plugin>
                            <artifactId>maven-resources-plugin</artifactId>
                            <executions>
                                <execution>
                                    <id>filter-deb-spec-files</id>
                                    <phase>prepare-package</phase>
                                    <goals>
                                        <goal>copy-resources</goal>
                                    </goals>
                                    <configuration>
                                        <outputDirectory>${project.build.directory}/unix/root-deb/assembly/DEBIAN</outputDirectory>
                                        <resources>
                                            <resource>
                                                <directory>src/main/unix/deb</directory>
                                                <filtering>true</filtering>
                                            </resource>
                                        </resources>
                                    </configuration>
                                </execution>
                                <execution>
                                    <id>filter-deb-script-files</id>
                                    <phase>prepare-package</phase>
                                    <goals>
                                        <goal>copy-resources</goal>
                                    </goals>
                                    <configuration>
                                        <outputDirectory>${deb.scripts.dir}</outputDirectory>
                                        <resources>
                                            <resource>
                                                <directory>src/main/scripts</directory>
                                                <filtering>true</filtering>
                                            </resource>
                                        </resources>
                                    </configuration>
                                </execution>
                            </executions>
                        </plugin>
                        <plugin>
                            <groupId>no.arktekk.unix</groupId>
                            <artifactId>unix-maven-plugin</artifactId>
                            <configuration>
                                <name>${unix.package}</name>
                                <debug>true</debug>
                                <contact>${project.organization.name}</contact>
                                <contactEmail>support@baxter-it.com</contactEmail>
                                <description>${project.description}</description>
                                <deb>
                                    <priority>optional</priority>
                                    <section>${unix.application.group.name}</section>
                                    <provides>${unix.package}</provides>
                                </deb>
                                <defaults>
                                    <fileAttributes>
                                        <user>${unix.user}</user>
                                        <group>${unix.group}</group>
                                        <mode>644</mode>
                                    </fileAttributes>
                                    <directoryAttributes>
                                        <user>${unix.user}</user>
                                        <group>${unix.group}</group>
                                        <mode>755</mode>
                                    </directoryAttributes>
                                </defaults>
                            </configuration>
                            <executions>
                                <execution>
                                    <id>build-deb-installer</id>
                                    <phase>package</phase>
                                    <goals>
                                        <goal>package-deb-attached</goal>
                                    </goals>
                                    <configuration>
                                    </configuration>
                                </execution>
                            </executions>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
            <properties>
                <deb.scripts.dir>${project.build.directory}/scripts/deb-filtered</deb.scripts.dir>
                <unix-maven-plugin.scripts.src.dir>${basedir}/src/main/unix/scripts-src</unix-maven-plugin.scripts.src.dir>
                <unix-maven-plugin.scripts.dir>${basedir}/src/main/unix/scripts</unix-maven-plugin.scripts.dir>
            </properties>
        </profile>

		<profile>
			<id>RPM</id>
			<activation>
				<os>
					<family>unix</family>
				</os>
			</activation>
			<build>
				<pluginManagement>
					<plugins>
						<plugin>
							<groupId>org.codehaus.mojo</groupId>
							<artifactId>rpm-maven-plugin</artifactId>
							<configuration>
								<name>${unix.package}</name>
								<group>${unix.application.group.name}</group>
								<defaultUsername>${unix.user}</defaultUsername>
								<defaultGroupname>${unix.group}</defaultGroupname>
								<defaultFilemode>644</defaultFilemode>
								<defaultDirmode>755</defaultDirmode>
								<needarch>false</needarch>
								<provides>
									<provide>${unix.package}</provide>
								</provides>
								<defineStatements>
									<defineStatement>__jar_repack %{nil}</defineStatement>
								</defineStatements>
							</configuration>
							<executions>
								<execution>
									<id>build-std-rpm-installer</id>
									<phase>package</phase>
									<goals>
										<goal>attached-rpm</goal>
									</goals>
									<configuration>
										<classifier>std</classifier>
										<provides combine.children="append">
											<provide>${unix.package}-std</provide>
										</provides>
										<conflicts>
											<conflict>${unix.package}-alt</conflict>
										</conflicts>
									</configuration>
								</execution>
								<execution>
									<id>build-alt-rpm-installer</id>
									<phase>package</phase>
									<goals>
										<goal>attached-rpm</goal>
									</goals>
									<configuration>
										<classifier>alt</classifier>
										<provides combine.children="append">
											<provide>${unix.package}-alt</provide>
										</provides>
										<conflicts>
											<conflict>${unix.package}-std</conflict>
										</conflicts>
									</configuration>
								</execution>
							</executions>
						</plugin>
					</plugins>
				</pluginManagement>
			</build>
		</profile>

		<profile>
			<id>Distribution-Artifactory</id>
			<distributionManagement>
				<repository>
					<id>artifactory-release-repository</id>
					<name>Artifactory Release Repository</name>
					<url>https://baxter.jfrog.io/baxter/baxter-releases</url>
				</repository>
				<snapshotRepository>
					<id>artifactory-snapshot-repository</id>
					<name>Artifactory Snapshot Repository</name>
					<url>https://baxter.jfrog.io/baxter/baxter-snapshots</url>
				</snapshotRepository>
				<site>
					<id>artifactory-sites-repository</id>
					<url>dav:https://baxter.jfrog.io/baxter/sites/parent/</url>
				</site>
			</distributionManagement>
		</profile>
		<profile>
			<id>Findbugs</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>findbugs-maven-plugin</artifactId>
						<version>3.0.3</version>
						<configuration>
							<maxHeap>1024</maxHeap>
							<effort>Max</effort>
							<failOnError>false</failOnError>
							<threshold>Low</threshold>
							<xmlOutput>true</xmlOutput>
							<findbugsXmlOutputDirectory>${project.build.directory}/findbugs</findbugsXmlOutputDirectory>
						</configuration>
						<executions>
							<execution>
								<id>analyze-compile</id>
								<phase>compile</phase>
								<goals>
									<goal>check</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>xml-maven-plugin</artifactId>
						<version>1.0</version>
						<configuration>
							<transformationSets>
								<transformationSet>
									<!-- Configures the source directory of XML files. -->
									<dir>${project.build.directory}/findbugs</dir>
									<!-- Configures the directory in which the FindBugs report is written. -->
									<outputDir>${project.build.directory}/findbugs</outputDir>
									<!-- Selects the used stylesheet. -->
									<!-- <stylesheet>fancy-hist.xsl</stylesheet> -->
									<!-- <stylesheet>color.xsl</stylesheet> -->
									<stylesheet>default.xsl</stylesheet>
									<!--<stylesheet>plain.xsl</stylesheet> -->
									<!-- <stylesheet>fancy.xsl</stylesheet> -->
									<!-- <stylesheet>summary.xsl</stylesheet> -->
									<fileMappers>
										<!-- Configures the file extension of the output files. -->
										<fileMapper
											implementation="org.codehaus.plexus.components.io.filemappers.FileExtensionMapper">
											<targetExtension>.html</targetExtension>
										</fileMapper>
									</fileMappers>
								</transformationSet>
							</transformationSets>
						</configuration>
						<executions>
							<!-- Ensures that the XSLT transformation is run when the project 
								is compiled. -->
							<execution>
								<phase>compile</phase>
								<goals>
									<goal>transform</goal>
								</goals>
							</execution>
						</executions>
						<dependencies>
							<dependency>
								<groupId>com.google.code.findbugs</groupId>
								<artifactId>findbugs</artifactId>
								<version>2.0.1</version>
							</dependency>
						</dependencies>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<properties>

		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<java.version>1.8</java.version>

		<unix.package>${project.artifactId}</unix.package>

		<unix.user>baxter</unix.user>
		<unix.group>baxter</unix.group>

		<unix.application.bin.dir>/usr/bin</unix.application.bin.dir>
		<unix.application.lib.dir>/usr/share/java</unix.application.lib.dir>
		<unix.application.log.dir>/var/log/baxter</unix.application.log.dir>
		<unix.config>/etc/baxter/config</unix.config>

		<unix.application.alt.root>/opt/baxter</unix.application.alt.root>
		<unix.application.alt.bin.dir>${unix.application.alt.root}/bin</unix.application.alt.bin.dir>
		<unix.application.alt.lib.dir>${unix.application.alt.root}/lib</unix.application.alt.lib.dir>
		<unix.alt.config>${unix.application.alt.root}/etc/config</unix.alt.config>

		<!-- Site Documentation properties -->
		<releaseVersion>${project.version}</releaseVersion>

	</properties>

</project>
